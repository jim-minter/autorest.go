//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package paginggroup

type ODataProductResult struct {
	ODataNextLink *string
	Values        []*Product
}

func (o *ODataProductResult) GetODataNextLink() (rv string) {
	if o != nil && o.ODataNextLink != nil {
		return *o.ODataNextLink
	}
	return
}

func (o *ODataProductResult) GetValues() (rv []*Product) {
	if o != nil {
		return o.Values
	}
	return
}

type Product struct {
	Properties *ProductProperties
}

func (p *Product) GetProperties() (rv *ProductProperties) {
	if p != nil {
		return p.Properties
	}
	return
}

type ProductProperties struct {
	ID   *int32
	Name *string
}

func (p *ProductProperties) GetID() (rv int32) {
	if p != nil && p.ID != nil {
		return *p.ID
	}
	return
}

func (p *ProductProperties) GetName() (rv string) {
	if p != nil && p.Name != nil {
		return *p.Name
	}
	return
}

type ProductResult struct {
	NextLink *string
	Values   []*Product
}

func (p *ProductResult) GetNextLink() (rv string) {
	if p != nil && p.NextLink != nil {
		return *p.NextLink
	}
	return
}

func (p *ProductResult) GetValues() (rv []*Product) {
	if p != nil {
		return p.Values
	}
	return
}

type ProductResultValue struct {
	NextLink *string
	Value    []*Product
}

func (p *ProductResultValue) GetNextLink() (rv string) {
	if p != nil && p.NextLink != nil {
		return *p.NextLink
	}
	return
}

func (p *ProductResultValue) GetValue() (rv []*Product) {
	if p != nil {
		return p.Value
	}
	return
}

type ProductResultValueWithXMSClientName struct {
	Indexes  []*Product
	NextLink *string
}

func (p *ProductResultValueWithXMSClientName) GetIndexes() (rv []*Product) {
	if p != nil {
		return p.Indexes
	}
	return
}

func (p *ProductResultValueWithXMSClientName) GetNextLink() (rv string) {
	if p != nil && p.NextLink != nil {
		return *p.NextLink
	}
	return
}

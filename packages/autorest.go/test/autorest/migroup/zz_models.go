//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package migroup

type Cat struct {
	// REQUIRED
	Name      *string
	Hisses    *bool
	LikesMilk *bool
	Meows     *bool
}

func (c *Cat) GetName() (rv string) {
	if c != nil && c.Name != nil {
		return *c.Name
	}
	return
}

func (c *Cat) GetHisses() (rv bool) {
	if c != nil && c.Hisses != nil {
		return *c.Hisses
	}
	return
}

func (c *Cat) GetLikesMilk() (rv bool) {
	if c != nil && c.LikesMilk != nil {
		return *c.LikesMilk
	}
	return
}

func (c *Cat) GetMeows() (rv bool) {
	if c != nil && c.Meows != nil {
		return *c.Meows
	}
	return
}

type Feline struct {
	Hisses *bool
	Meows  *bool
}

func (f *Feline) GetHisses() (rv bool) {
	if f != nil && f.Hisses != nil {
		return *f.Hisses
	}
	return
}

func (f *Feline) GetMeows() (rv bool) {
	if f != nil && f.Meows != nil {
		return *f.Meows
	}
	return
}

type Horse struct {
	// REQUIRED
	Name         *string
	IsAShowHorse *bool
}

func (h *Horse) GetName() (rv string) {
	if h != nil && h.Name != nil {
		return *h.Name
	}
	return
}

func (h *Horse) GetIsAShowHorse() (rv bool) {
	if h != nil && h.IsAShowHorse != nil {
		return *h.IsAShowHorse
	}
	return
}

type Kitten struct {
	// REQUIRED
	Name        *string
	EatsMiceYet *bool
	Hisses      *bool
	LikesMilk   *bool
	Meows       *bool
}

func (k *Kitten) GetName() (rv string) {
	if k != nil && k.Name != nil {
		return *k.Name
	}
	return
}

func (k *Kitten) GetEatsMiceYet() (rv bool) {
	if k != nil && k.EatsMiceYet != nil {
		return *k.EatsMiceYet
	}
	return
}

func (k *Kitten) GetHisses() (rv bool) {
	if k != nil && k.Hisses != nil {
		return *k.Hisses
	}
	return
}

func (k *Kitten) GetLikesMilk() (rv bool) {
	if k != nil && k.LikesMilk != nil {
		return *k.LikesMilk
	}
	return
}

func (k *Kitten) GetMeows() (rv bool) {
	if k != nil && k.Meows != nil {
		return *k.Meows
	}
	return
}

type Pet struct {
	// REQUIRED
	Name *string
}

func (p *Pet) GetName() (rv string) {
	if p != nil && p.Name != nil {
		return *p.Name
	}
	return
}
